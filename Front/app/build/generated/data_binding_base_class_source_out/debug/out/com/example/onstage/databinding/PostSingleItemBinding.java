// Generated by view binder compiler. Do not edit!
package com.example.onstage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onstage.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostSingleItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView cmnts;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView likes;

  @NonNull
  public final TextView postName;

  @NonNull
  public final ImageView postPic;

  @NonNull
  public final TextView postRole;

  private PostSingleItemBinding(@NonNull CardView rootView, @NonNull TextView cmnts,
      @NonNull TextView description, @NonNull TextView likes, @NonNull TextView postName,
      @NonNull ImageView postPic, @NonNull TextView postRole) {
    this.rootView = rootView;
    this.cmnts = cmnts;
    this.description = description;
    this.likes = likes;
    this.postName = postName;
    this.postPic = postPic;
    this.postRole = postRole;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static PostSingleItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostSingleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_single_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostSingleItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cmnts;
      TextView cmnts = ViewBindings.findChildViewById(rootView, id);
      if (cmnts == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.likes;
      TextView likes = ViewBindings.findChildViewById(rootView, id);
      if (likes == null) {
        break missingId;
      }

      id = R.id.postName;
      TextView postName = ViewBindings.findChildViewById(rootView, id);
      if (postName == null) {
        break missingId;
      }

      id = R.id.postPic;
      ImageView postPic = ViewBindings.findChildViewById(rootView, id);
      if (postPic == null) {
        break missingId;
      }

      id = R.id.postRole;
      TextView postRole = ViewBindings.findChildViewById(rootView, id);
      if (postRole == null) {
        break missingId;
      }

      return new PostSingleItemBinding((CardView) rootView, cmnts, description, likes, postName,
          postPic, postRole);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
